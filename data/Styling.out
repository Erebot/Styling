State 0:
          result ::= * expr
          expr ::= * PAR_OPEN expr PAR_CLOSE
          expr ::= * expr OP_ADD expr
          expr ::= * expr OP_SUB expr
          expr ::= * OP_COUNT expr
          expr ::= * VARIABLE
          expr ::= * OP_ADD NUMBER
          expr ::= * OP_SUB NUMBER
          expr ::= * NUMBER

                        OP_ADD shift  8
                        OP_SUB shift  7
                      OP_COUNT shift  3
                      PAR_OPEN shift  2
                      VARIABLE shift  12
                        NUMBER shift  9
                        result accept
                          expr shift  6

State 1:
          expr ::= * PAR_OPEN expr PAR_CLOSE
          expr ::= * expr OP_ADD expr
          expr ::= * expr OP_SUB expr
          expr ::= expr OP_SUB * expr
          expr ::= * OP_COUNT expr
          expr ::= * VARIABLE
          expr ::= * OP_ADD NUMBER
          expr ::= * OP_SUB NUMBER
          expr ::= * NUMBER

                        OP_ADD shift  8
                        OP_SUB shift  7
                      OP_COUNT shift  3
                      PAR_OPEN shift  2
                      VARIABLE shift  12
                        NUMBER shift  9
                          expr shift  14

State 2:
          expr ::= * PAR_OPEN expr PAR_CLOSE
          expr ::= PAR_OPEN * expr PAR_CLOSE
          expr ::= * expr OP_ADD expr
          expr ::= * expr OP_SUB expr
          expr ::= * OP_COUNT expr
          expr ::= * VARIABLE
          expr ::= * OP_ADD NUMBER
          expr ::= * OP_SUB NUMBER
          expr ::= * NUMBER

                        OP_ADD shift  8
                        OP_SUB shift  7
                      OP_COUNT shift  3
                      PAR_OPEN shift  2
                      VARIABLE shift  12
                        NUMBER shift  9
                          expr shift  5

State 3:
          expr ::= * PAR_OPEN expr PAR_CLOSE
          expr ::= * expr OP_ADD expr
          expr ::= * expr OP_SUB expr
          expr ::= * OP_COUNT expr
          expr ::= OP_COUNT * expr
          expr ::= * VARIABLE
          expr ::= * OP_ADD NUMBER
          expr ::= * OP_SUB NUMBER
          expr ::= * NUMBER

                        OP_ADD shift  8
                        OP_SUB shift  7
                      OP_COUNT shift  3
                      PAR_OPEN shift  2
                      VARIABLE shift  12
                        NUMBER shift  9
                          expr shift  15

State 4:
          expr ::= * PAR_OPEN expr PAR_CLOSE
          expr ::= * expr OP_ADD expr
          expr ::= expr OP_ADD * expr
          expr ::= * expr OP_SUB expr
          expr ::= * OP_COUNT expr
          expr ::= * VARIABLE
          expr ::= * OP_ADD NUMBER
          expr ::= * OP_SUB NUMBER
          expr ::= * NUMBER

                        OP_ADD shift  8
                        OP_SUB shift  7
                      OP_COUNT shift  3
                      PAR_OPEN shift  2
                      VARIABLE shift  12
                        NUMBER shift  9
                          expr shift  10

State 5:
          expr ::= PAR_OPEN expr * PAR_CLOSE
          expr ::= expr * OP_ADD expr
          expr ::= expr * OP_SUB expr

                        OP_ADD shift  4
                        OP_SUB shift  1
                     PAR_CLOSE shift  13

State 6:
      (0) result ::= expr *
          expr ::= expr * OP_ADD expr
          expr ::= expr * OP_SUB expr

                        OP_ADD shift  4
                        OP_SUB shift  1
                     {default} reduce 0

State 7:
          expr ::= OP_SUB * NUMBER

                        NUMBER shift  11

State 8:
          expr ::= OP_ADD * NUMBER

                        NUMBER shift  16

State 9:
      (8) expr ::= NUMBER *

                     {default} reduce 8

State 10:
          expr ::= expr * OP_ADD expr
      (2) expr ::= expr OP_ADD expr *
          expr ::= expr * OP_SUB expr

                     {default} reduce 2

State 11:
      (7) expr ::= OP_SUB NUMBER *

                     {default} reduce 7

State 12:
      (5) expr ::= VARIABLE *

                     {default} reduce 5

State 13:
      (1) expr ::= PAR_OPEN expr PAR_CLOSE *

                     {default} reduce 1

State 14:
          expr ::= expr * OP_ADD expr
          expr ::= expr * OP_SUB expr
      (3) expr ::= expr OP_SUB expr *

                     {default} reduce 3

State 15:
          expr ::= expr * OP_ADD expr
          expr ::= expr * OP_SUB expr
      (4) expr ::= OP_COUNT expr *

                     {default} reduce 4

State 16:
      (6) expr ::= OP_ADD NUMBER *

                     {default} reduce 6

